{"name":"Ruby-procinfo","tagline":"A very simple Ruby/C extension to (at the moment) retrieve getrusage information about current process","body":"# procinfo                                                                                 \r\n                                                                                           \r\n![Travis CI build status](https://api.travis-ci.org/mbbx6spp/ruby-procinfo.png)            \r\n                                                                                           \r\nA Ruby/C extension packaged as a gem that provides a more uniform interface                \r\nto \\*NIX process, system, and socket information.                                          \r\n                                                                                           \r\n                                                                                           \r\nAt the moment it only implements process information retrieved from the                    \r\n`getrusage` POSIX system call for the current process (`SELF`) and children                \r\nprocesses (`CHILDREN`). Therefore, this is compatible with POSIX-compatible                \r\nOSes.                                                                                      \r\n                                                                                           \r\nMore is coming.                                                                            \r\n                                                                                           \r\n## Example Usage                                                                           \r\n                                                                                           \r\nRetrieve rusage stats for all children processes:                                          \r\n                                                                                           \r\n```ruby                                                                                    \r\nstats = Process.stats(:children)                                                           \r\nputs stats.user_time, stats.system_time                                                    \r\n# some useful fields, but few others supported                                             \r\nputs stats.max_rss                                                                         \r\nputs stats.page_faults                                                                     \r\nputs stats.msgs_sent                                                                       \r\nputs stats.msgs_recvd                                                                      \r\nputs stats.signals_recvd                                                                   \r\nputs stats.shared_text_size                                                                \r\nputs stats.swaps                                                                           \r\nputs stats.block_input_ops                                                                 \r\nputs stats.block_output_ops                                                                \r\n```\r\n\r\n## Motivation                                                                          \r\n                                                                                       \r\nI really needed to be able to get current RSS and max RSS information (and             \r\nrelated process information) for a given process (which may or may not be              \r\nthe current running process). No Ruby library (as far as I found) offered a            \r\nconsistent view of this information across the most \\*NIX OSes and were                \r\ncurrently maintained with tests.                                                       \r\n                                                                                       \r\nPlus this is a great exercise for me after forgetting C after 11 years of              \r\nnot developing with it. It's a breath of fresh air.                                    \r\n                                                                                       \r\n## Related Works                                                                       \r\n                                                                                       \r\n`sys-proctable` is Ruby/C extension library that provides this to some                 \r\ndegree. I wanted to use a different approach to this library and lower                 \r\noverhead, and compatibility of APIs exposed for all the supporting OSes.               \r\n                                                                                       \r\nHowever, the above mentioned library may offer what you need.                          \r\n                                                                                       \r\n## TODO                                                                                \r\n                                                                                       \r\nLots to do still.                                                                      \r\n                                                                                       \r\nBefore I cut v0.1.0 I plan on doing:                                                   \r\n                                                                                       \r\n* Adding ability to get all `CHILDREN` process information, not just SELF              \r\n* Add samples                                                                          \r\n* Add documentation                                                                    \r\n                                                                                       \r\nLonger-term I would like to do the following:                                          \r\n                                                                                       \r\n* Add socket/connection retrieval from the system based on state (e.g. `CLOSE_WAIT`)   \r\n                                                                                       \r\n## License                                                                             \r\n                                                                                       \r\nThis code is shared under the BSD 3-clause license. See LICENSE for                    \r\nmore information.                                                                      \r\n\r\n## Author(s)                                                                             \r\n                                                                                         \r\n* [Susan Potter](http://susanpotter.net) <me at susanpotter do net> (mbbx6spp on GitHub) \r\n                                                                                         \r\n## Contributor(s)                                                                        \r\n                                                                                         \r\nN/A                                                                                                                                                               ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}